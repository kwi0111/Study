train_test_split(stratify) : 훈련 데이터와 테스트에서 동일한 비율을 유지

F_score는 정밀도(precision)와 재현율(recall)의 조화평균으로 계산되는 지표
f1 = f1_score(y_test, y_predict)

fit_transform( )과 transform( )의 차이
스케일링을 할 때 꼭 사용하는게 fit_transform(), fit(), transform()메서드이다. 
fit_transform()은 말그대로 fit()과 transform()을 한번에 처리할 수 있게 하는 메서드인데 조심해야 하는 것은 테스트 데이터에는 fit_transform()메서드를 쓰면 안된다.
fit()은 데이터를 학습시키는 메서드이고 transform()은 실제로 학습시킨 것을 적용하는 메서드이다.

데이터 스케일링(Data Scaling)

1. StandardScaler
feature 값의 평균=0, 표준편차=1로 조정해서 모든 특성이 같은 크기를 갖게 정규화 한다. 각 데이터가 평균에서 몇 표준편차만큼 떨어져있는지를 기준으로 삼게 된다. 평균을 제거하고 데이터를 단위 분산으로 조정하기 때문에 이상치가 있다면 평균과 표준편차에 영향을 미쳐 변환된 데이터의 확산은 매우 달라지게 된다.
데이터의 특징을 모르는 경우 가장 무난한 종류의 정규화 중 하나

2. MinMaxScaler
최대값=1, 최소값=0으로 조정하여 0~1 구간 내에 균등하게 값을 배정하는 정규화 방법. 다만 이상치가 있는 경우 변환된 값이 매우 좁은 범위로 압축될 수 있어 아웃라이어에 취약함. 
(만약 음수 값이 있으면 -1에서 1 값으로 변환)

3. MaxAbsScaler
0을 기준으로 절대값이 가장 큰 수가 1 또는 -1이 되도록 조정, 양수 데이터로만 구성되어 MinMaxScaler와 유사하게 동작하며 데이터셋에서는 아웃라이어에 민감
데이터 스케일링을 하는 이유가 아웃라이어의 영향을 최소화하는 것이기 때문에 보통은 이상치 영향을 가장 적게 받는 StandardScaler 혹은 RobustScaler를 주로 사용한다. 

4. RobustScaler
중앙값=0, IQR(1분위~3분위값)=1로 조정, 아웃라이어 영향을 최소화하며 정규분포보다 더 넓게 분포. 이상치에 강함.
RobustScaler를 사용하면 모든 변수들이 같은 스케일을 갖게 되며, StandardScaler에 비해 스케일링 결과가 더 넓은 범위로 분포
IQR = Q3 - Q1 : 즉, 25퍼센타일과 75퍼센타일의 값들을 다룬다.


ModelCheckpoint()
훈련하는 동안 일정한 간격으로 모델의 체크포인트를 저장
save_best_only=True 최상의 검증 세트 점수에서만 모델을 저장



import datetime
date = datetime.datetime.now()  
print(date) # 2024-01-17 10:55:11.015537
print(type(date))   # <class 'datetime.datetime'> 시간 데이터
date = date.strftime("%m%d_%H%M")   # "%m%d_%H%M" 월 일 시간 분 // _는 문자
print(date) # 0117_1059
print(type(date))   # <class 'str'> 문자열
%m : 0을 채운 두 자리 수의 월 ex) 01, 02 ...  11 ,12
%d : 0을 채운 두 자리 수의 일 ex) 01, 02 ...  30, 31
%H : 0을 채운 24시간제의 시간 ex) 00, 01 … 23
%M : 0을 채운 두 자리 수의 분 ex) 00, 01 ... 58, 59

path = '../_data/_save/MCP/'  # 문자열로 저장
filename = '{epoch:04d}-{val_loss:.4f}.hdf5'  # 히스토리로 반환 되는 놈들 // 훈련 횟수 - 발로스 // 04d : 4자리수 까지  // 04f : 소수 4번째 자리 까지 // ex) 1000-0.3333.hdf5
filepath = "".join([path, 'k25_', date, '_', filename])  # ""은 더하기 개념 (path + date + filename)
# ../_data/_save/MCP/k25_0117_1059_0001-0.3333.hdf5


